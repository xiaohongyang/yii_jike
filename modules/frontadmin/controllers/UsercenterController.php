<?php
/**
 * Created by PhpStorm.
 * User: xiaohongyang
 * Date: 2016/5/23
 * Time: 6:25
 */

namespace app\modules\frontadmin\controllers;


use app\modules\common\models\PayOrder;
use app\modules\frontadmin\models\user_address\User_address;
use app\modules\frontadmin\service\MessageService;
use app\modules\frontadmin\service\PrizeCodesService;
use app\modules\frontadmin\service\User_accountService;
use app\modules\frontadmin\service\UserService;
use app\modules\jike\models\User;
use app\modules\jike\models\UserEditPassword;

class UsercenterController extends BaseController
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        if(!$this->getLoginUserId()){
            return $this->redirect('/public/login');
        }
    }


    public function actionIndex(){

        $service = UserService::getUserinfoService();
        $model = $service->getModel();

        if(\Yii::$app->request->isPost){
            $data = \Yii::$app->getRequest()->post();
            $result = $service->edit($data);
            if($result){
                $service = UserService::getUserinfoService();
                $model = $service->getModel();
            }
        }

        return $this->render('index', [
            'model' => $model
        ]);
    }


    public function actionEditpassword(){

        $this->setLayoutEmpty();

        $service = new UserService();
        $model = $service->getUserEditPasswordModel();

        if(\Yii::$app->request->isPost && $model instanceof UserEditPassword){
            $result = $model->editPassword(\Yii::$app->request->post());
            if($result){
                \Yii::$app->getSession()->setFlash('success','修改密码成功!');
            } else {
                \Yii::$app->getSession()->setFlash('fail','修改密码失败!');
            }
        }

        return $this->render('editpassword', [
            'model' => $model
        ]);
    }

    public function actionEditaddress(){

        $this->setLayoutEmpty();

        $service = new UserService();
        $model = $service->getUserAddressModel();

        if(\Yii::$app->request->isPost && $model instanceof User_address){

            $result = $model->editAddress(\Yii::$app->request->post());
            if($result){
                \Yii::$app->getSession()->setFlash('success','修改地址成功!');
            } else {
                \Yii::$app->getSession()->setFlash('fail','修改地址失败!');
            }
        }

        return $this->render('editaddress', [
            'model' => $model
        ]);
    }

    public function actionIntegrateAccount(){

        /*$userAccountService = new User_accountService();
        $rs = $userAccountService->integrateAccountRecharge(3);
        var_dump($rs);*/

        $userAccountService = new User_accountService();

        if(\Yii::$app->request->isPost){

            $action = \Yii::$app->request->post('action');
            $this->doIntegrateAccountChange($action, $userAccountService);
            return ;
        } else {

            $modelRecharge = $userAccountService->getInteGrateRechargeForm();
            $modelCash = $userAccountService->getIntegrateCashForm();
            return $this->render('integrateAccount', [
                'model' => $modelRecharge,
                'modelCash' => $modelCash,
                'integrateAccount' => $userAccountService->getModel()->integrate_account
            ]);
        }
    }

    private function doIntegrateAccountChange($action, User_accountService $userAccountService){

        $modelRecharge = $userAccountService->getInteGrateRechargeForm();

        if($action == 'recharge'){
            $rechargeResult = $modelRecharge->recharge(\Yii::$app->getRequest()->post());
            if($rechargeResult){
                \Yii::$app->getSession()->setFlash('info', '充值成功!');
                $this->redirect('/apay/index.php');
            }else{
                \Yii::$app->getSession()->setFlash('info', '充值失败!');
                $this->redirect('/frontadmin/usercenter/integrateAccount');
            }
        }else if($action == 'cash'){

            $modelCash = $userAccountService->getIntegrateCashForm();
            $cashResult = $modelCash->cash(\Yii::$app->request->post());
            if($cashResult){
                \Yii::$app->getSession()->setFlash('info', '提现成功!');
            }else{
                \Yii::$app->getSession()->setFlash('info', '提现失败!');
            }
            $this->redirect('/frontadmin/usercenter/integrateAccount');
        }
    }

    private function doMarktingAccountChange($action, User_accountService $userAccountService){

        $modelRecharge = $userAccountService->getMarktingRechargeForm();
        $modelCash = $userAccountService->getIntegrateCashForm();

        if($action == 'recharge'){
            $rechargeResult = $modelRecharge->recharge(\Yii::$app->getRequest()->post());
            if($rechargeResult){
                \Yii::$app->getSession()->setFlash('info', '充值成功!');
            }else{
                \Yii::$app->getSession()->setFlash('info', '充值失败!');
            }
            $this->redirect('/frontadmin/usercenter/marktingAccountRecharge');
        }
    }

    public function actionMsg(){
        /*$service = new MessageService();
        $service->welcomeRegister(User::findOne(['user_id'=>$this->getLoginUserId()]));*/

        $service = new MessageService();
        $msgProvider = $service->getUserMessageProvider($this->getLoginUserId());

        return $this->render('msg', [
            'msgProvider' => $msgProvider
        ]);
    }

    public function actionMarktingAccountRecharge(){

        $userAccountService = new User_accountService();

        if(\Yii::$app->request->isPost){

            $action = \Yii::$app->request->post('action');
            $this->doMarktingAccountChange($action, $userAccountService);
            return ;
        } else {
            $modelRecharge = $userAccountService->getMarktingRechargeForm();
            $invoiceModel = $userAccountService->getMarAccountInvoiceForm();
            return $this->render('marktingAccountRecharge', [
                'model' => $modelRecharge,
                'invoiceModel' => $invoiceModel,
                'marktingAccount' => $userAccountService->getModel()->markting_account
            ]);
        }
    }

    /**
     * 保证金账户管理
     * @return string|void
     */
    public function actionFrozenAccount(){

        $userAccountService = new User_accountService();

        if(\Yii::$app->request->isPost){

            $action = \Yii::$app->request->post('action');
            $this->doFrozenAccountChange($action, $userAccountService);
            return ;
        } else {

            $modelRecharge = $userAccountService->getFrozenRechargeForm();
            $modelCash = $userAccountService->getIntegrateCashForm();
            return $this->render('frozenAccount', [
                'model' => $modelRecharge,
                'modelCash' => $modelCash,
                'frozenAccount' => $userAccountService->getModel()->frozen_account
            ]);
        }
    }
    private function doFrozenAccountChange($action, User_accountService $userAccountService){

        $modelRecharge = $userAccountService->getFrozenRechargeForm();

        if($action == 'recharge'){
            $cashResult = $modelRecharge->recharge(\Yii::$app->getRequest()->post());
            if($cashResult){
                \Yii::$app->getSession()->setFlash('info', '充值成功!');
            }else{
                \Yii::$app->getSession()->setFlash('info', '充值失败!');
            }
            $this->redirect('/frontadmin/usercenter/frozenAccount');
        } else if($action == 'cash'){

            $cashModelForm = $userAccountService->getFrozenCashForm();
            $cashResult = $cashModelForm->cash(\Yii::$app->getRequest()->post());
            if($cashResult){
                returnJson(1, '提现成功!');
            }else{
                returnJson(0, $cashModelForm->message ? : ($cashModelForm->getFirstErrors()?implode(' ', $cashModelForm->getFirstErrors()): '操作失败!'));
            }
        }
    }

    /**
     * 创建或编辑收货地址信息
     * @return string
     */
    public function actionCreateOrEditAddress(){

        $this->setLayoutEmpty();

        $service = new UserService();
        $model = $service->getUserEditPasswordModel();

        if(\Yii::$app->request->isPost && $model instanceof UserEditPassword){
            $result = $model->editPassword(\Yii::$app->request->post());
            if($result){
                \Yii::$app->getSession()->setFlash('success','修改密码成功!');
            } else {
                \Yii::$app->getSession()->setFlash('fail','修改密码失败!');
            }
        }

        return $this->render('editpassword', [
            'model' => $model
        ]);
    }

    public function actionCashPrize(){

        $prizeCodesService = new PrizeCodesService();
        $models = $prizeCodesService->getPrizedCodesList();

        return $this->render('cashprize.php', [
           'models' => $models,
            'pages' => $prizeCodesService->getPages()
        ]);
    }


}