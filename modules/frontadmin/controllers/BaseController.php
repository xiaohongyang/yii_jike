<?php
/**
 * Created by PhpStorm.
 * User: xiaohongyang
 * Date: 2016/3/12
 * Time: 20:56
 */

namespace app\modules\frontadmin\controllers;

use app\modules\frontadmin\service\BaseService;
use yii\base\InlineAction;
use yii\web\Controller;

class BaseController extends \app\modules\jike\controllers\BaseController
{


    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->layout = 'main';
    }

    public function runAction($id, $params = [])
    {
        /*if(self::$isCheckLogin == true)
            $this->_checkLoginHandle();*/
        return parent::runAction($id, $params); // TODO: Change the autogenerated stub
    }


    public function afterAction($action, $result)
    {
        return parent::afterAction($action, $result); // TODO: Change the autogenerated stub
    }


    public function createAction($id)
    {
        if ($id === '') {
            $id = $this->defaultAction;
        }

        $actionMap = $this->actions();
        if (isset($actionMap[$id])) {
            return \Yii::createObject($actionMap[$id], [$id, $this]);
        } elseif (preg_match('/^[a-zA-Z0-9\\-_]+$/', $id) && strpos($id, '--') === false && trim($id, '-') === $id) {
            $methodName = 'action' . str_replace(' ', '', ucwords(implode(' ', explode('-', $id))));
            if (method_exists($this, $methodName)) {
                $method = new \ReflectionMethod($this, $methodName);
                if ($method->isPublic() && $method->getName() === $methodName) {
                    return new InlineAction($id, $this, $methodName);
                }
            }
        }

        return null;
    }




}