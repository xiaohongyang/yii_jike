<?php
/**
 * Created by PhpStorm.
 * User: xiaohongyang
 * Date: 2016/3/22
 * Time: 13:20
 */

namespace app\modules\frontadmin\models\video;


use app\modules\common\models\letv\Letv;
use app\modules\frontadmin\models\BaseActiveRecord;
use app\modules\frontadmin\models\junction\pg_video;
use app\modules\frontadmin\models\prize_goods\prize_goods;
use app\modules\frontadmin\models\rl_lovevideo_video\Rl_lovevideo_video;
use app\modules\frontadmin\models\Rl_user_ad_video_video;
use app\modules\frontadmin\models\User_ad_video;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;

class video extends BaseActiveRecord
{

    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';




    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }


    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
            ]
        ];
    }

    public function rules(){
        return [
            ['video_id', 'required'],
            ['video_unique', 'required', 'on' => $this::SCENARIO_UPDATE],
            ['video_unique', 'safe'],
            ['user_id', 'required', 'on' => $this::SCENARIO_CREATE]
        ];
    }

    public function scenarios()
    {
        return parent::scenarios() + [
            $this::SCENARIO_CREATE => [
                'video_id',
                'video_unique',
                'user_id'
            ],
            $this::SCENARIO_UPDATE => [
                'video_id',
                'video_unique'
            ]
        ];
    }


    public function create($data){

        $this->scenario = $this::SCENARIO_CREATE;

        if($this->load($data) && $this->validate()){
            return $this->save();
        }
        return false;
    }

    /**
     * 夺宝商品关联
     * @return \yii\db\ActiveQuery
     */
    public function getPg_video(){
        return $this->hasOne(pg_video::className(), ['v_id'=>'v_id']);
    }

    /**
     * 夺宝商品
     * @return $this
     */
    public function getPrize_goods(){
        return $this->hasOne(prize_goods::className(), ['prize_id' => 'pg_id'])
            ->via('pg_video');
    }

    /**
     * 抽奖视频关联
     * @return \yii\db\ActiveQuery
     */
    public function getRl_user_ad_video_video(){
        return $this->hasOne(Rl_user_ad_video_video::className(), ['v_id'=>'v_id']);
    }

    public function getRl_lovevideo_video(){
        return $this->hasOne(Rl_lovevideo_video::className(), ['v_id'=>'v_id']);
    }

    /**
     * 抽奖视频
     * @return $this
     */
    public function getUser_ad_video(){
        return $this->hasOne(User_ad_video::className(), ['ad_id'=>'ad_id'])
            ->via('rl_user_ad_video_video');
    }

    /**
     * 删除视频
     * @return false|int
     * @throws \Exception
     */
    public function remove(){
        return $this->delete();
    }

    public function afterDelete(){
        //删除云视频文件
        $videoId = $this->video_id;
        $rs = Letv::video_del($videoId);
        return $rs;
    }
}