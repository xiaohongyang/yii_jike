<?php
/**
 * Created by PhpStorm.
 * User: xiaohongyang
 * Date: 2016/3/15
 * Time: 21:29
 */

namespace app\modules\frontadmin\models\prize_goods;


use app\modules\common\models\uploadform\Uploadform;
use app\modules\frontadmin\models\prize_goods\prize_goods;
use app\modules\frontadmin\models\prize_type\prize_type;
use app\modules\frontadmin\models\video\video;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;
use yii\db\Expression;
use yii\helpers\ArrayHelper;

class prize_goods_create extends prize_goods
{

    private $uploadForm;
    public $prize_goods_pic;
    public $video;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->uploadForm = new Uploadform();
        $this->video = new video();

        $this->on(self::EVENT_AFTER_INSERT, [$this, 'afterInsert']);
    }

    /**
     * 时间保存
     * @return array
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
            ]
        ];
    }

    /**
     * 表名称
     * @return string
     */
    public static function tableName()
    {
        $model = new prize_goods();
        return $model->tableName();
    }

    public function beforeSave($insert)
    {

        //验证规格属性1
        $prize_norms_01 = unserialize($this->prize_norms_01);
        if(empty($prize_norms_01) || is_null($prize_norms_01 || !is_array($prize_norms_01)|| count($prize_norms_01)<1)){
            $this->addError('prize_norms_01', '规格属性一不能为空!');
        }

        //验证规格属性2
        $prize_norms_02 = unserialize($this->prize_norms_02);
        if(empty($prize_norms_02) || is_null($prize_norms_02 || !is_array($prize_norms_02)|| count($prize_norms_02)<1)){
            $this->addError('prize_norms_02', '规格属性二不能为空!');
        }



        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }


    public function getPrize_type_list()
    {
        $model = new prize_type();
        return $model->find()->all();
    }


    public function rules()
    {
        return [
            [
                ['prize_type_id', 'prize_short_name', 'prize_code', 'prize_name', 'market_price', 'prize_describe', 'user_id', 'shop_name', 'goods_link'], 'required'
            ],
            [
                'prize_code', 'required'
            ],
            [
                ['offcial_website'], 'safe'
            ]

        ];
    }

    public function attributeLabels()
    {
        return [
            'prize_type_id' => '奖品所属分类',
            'prize_code' => '商品编号',
            'prize_name' => '商品名称',
            'prize_norms_01' => '规格选项一',
            'prize_norms_02' => '规格选项二',
            'market_price' => '商品市场价值',
            'shop_name' => '商城名称',
            'goods_link' => '旗舰店商品地址',
            'offcial_website' => '官网地址',
            'weixin_qrcode' => '微信二维码',
            'prize_describe' => '奖品(商品)描述',
            'prize_short_name' => '商品短名称'
        ];
    }

    public function getPlaceHolder()
    {
        return [
            'prize_code' => '商品编号',
            'prize_name' => '商品全称,30个字以内',
            'shop_name' => '商城名称(限4个字)',
            'goods_link' => '旗舰店商品详情页地址',
            'offcial_website' => '官网地址',
            'weixin_qrcode' => '微信公众号',
            'prize_short_name' => '商品短名称'
        ];
    }

    public function create($data)
    {

        $this->user_id = \Yii::$app->jike_user->identity->getId();

        if(empty($data['video']['video_unique'])){
            $this->addError('video', "视频不能为空!");
            return false;
        }else{
            $data['video']['user_id'] = self::getLoingUserId();
            if($this->video instanceof video)
                $this->video->scenario = video::SCENARIO_CREATE;
            $this->video->load($data);
        }

        if ($this->load($data) && $this->validate()) {

            //删除空的值
            $data['prize_norms_01'] = array_filter($data['prize_norms_01']);
            $data['prize_norms_02'] = array_filter($data['prize_norms_02']);

            //验证商品图片
            $uploadFormValuePic = $data['UploadFormValuePic'];
            $uploadFormValuePic = array_filter($uploadFormValuePic);
            if(count($uploadFormValuePic) == 0){
                $this->addError('prize_goods_pic', "商品图片不能为空!");
                return;
            }

            //规格参数处理
            if (is_array($data['prize_norms_01']) && count($data['prize_norms_01']))
                $this->prize_norms_01 = serialize($data['prize_norms_01']);
            if (is_array($data['prize_norms_02']) && count($data['prize_norms_02']))
                $this->prize_norms_02 = serialize($data['prize_norms_02']);


            if ($this->save()) {

                //更新缓存表
                $uploadFormValue = array_merge($uploadFormValuePic, $data['UploadFormValueWxQrCode']);
                $uploadFormValue = array_filter($uploadFormValue);
                Uploadform::updateColumnValue($this->prize_id, ['in', 'upload_id', $uploadFormValue]);
                return true;
            }
        }
        return false;
    }



    /**
     * 添加vedio 关联vedio视频表
     * @param $event
     */
    public function afterInsert($event){

        $sender = $event->sender;
        $video = $sender->video;
         
        if($video->validate() && $video->save()){

            $id = $video->link('prize_goods', $sender);
        }
    }


}